// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RepairShop.Server.DataBase;

namespace RepairShop.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("RepairShop.Shared.Models.CashRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Ammount")
                        .HasColumnType("integer");

                    b.Property<string>("Customer")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CashRegisterT");
                });

            modelBuilder.Entity("RepairShop.Shared.Models.CustomerData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TvBrand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TvInch")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CustomerDataT");
                });

            modelBuilder.Entity("RepairShop.Shared.Models.TvCheckIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("CustomerDataId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateIn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Failure")
                        .HasColumnType("text");

                    b.Property<bool>("Returned")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CustomerDataId");

                    b.ToTable("TvCheckInT");
                });

            modelBuilder.Entity("RepairShop.Shared.Models.TvCheckOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("FeePaid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OutDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Repaired")
                        .HasColumnType("boolean");

                    b.Property<int>("TvCheckInId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TvCheckInId")
                        .IsUnique();

                    b.ToTable("TvCheckOutT");
                });

            modelBuilder.Entity("RepairShop.Shared.Models.TvCheckIn", b =>
                {
                    b.HasOne("RepairShop.Shared.Models.CustomerData", "CustomerData")
                        .WithMany("TvCheckIns")
                        .HasForeignKey("CustomerDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerData");
                });

            modelBuilder.Entity("RepairShop.Shared.Models.TvCheckOut", b =>
                {
                    b.HasOne("RepairShop.Shared.Models.TvCheckIn", "TvCheckIn")
                        .WithOne("TvCheckOut")
                        .HasForeignKey("RepairShop.Shared.Models.TvCheckOut", "TvCheckInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TvCheckIn");
                });

            modelBuilder.Entity("RepairShop.Shared.Models.CustomerData", b =>
                {
                    b.Navigation("TvCheckIns");
                });

            modelBuilder.Entity("RepairShop.Shared.Models.TvCheckIn", b =>
                {
                    b.Navigation("TvCheckOut");
                });
#pragma warning restore 612, 618
        }
    }
}
